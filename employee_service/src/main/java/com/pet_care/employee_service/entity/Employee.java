package com.pet_care.employee_service.entity;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.pet_care.employee_service.enums.Gender;
import com.pet_care.employee_service.enums.Role;
import jakarta.persistence.*;
import lombok.*;
import lombok.experimental.FieldDefaults;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import java.util.Date;

/**
 * Represents an employee in the system. This entity is mapped to the "employees" table in the database.
 * It contains details about the employee, including personal information, role, and timestamps for creation and updates.
 */
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@Builder
@Entity(name = "employees")
@FieldDefaults(level = AccessLevel.PRIVATE)
public class Employee {

    /**
     * The unique identifier for the employee. This field is automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Auto-generated ID for each employee
    Long id;

    /**
     * The first name of the employee.
     * Mapped to "first_name" in the database.
     */
    @JsonProperty("first_name")
    String firstName;

    /**
     * The last name of the employee.
     * Mapped to "last_name" in the database.
     */
    @JsonProperty("last_name")
    String lastName;

    /**
     * URL of the employee's profile image.
     * Mapped to "image_url" in the database.
     */
    @JsonProperty("image_url")
    String imageUrl;

    /**
     * The email address of the employee.
     */
    String email;

    /**
     * The physical address of the employee.
     */
    String address;

    /**
     * The gender of the employee (Male or Female).
     * Stored as an enum value (MALE, FEMALE).
     */
    @Enumerated(EnumType.STRING)
    Gender gender;

    /**
     * The associated account ID for the employee.
     * Mapped to "account_id" in the database.
     */
    @JsonProperty("account_id")
    Long accountId;

    /**
     * The role assigned to the employee within the organization (e.g., DOCTOR, RECEPTIONIST).
     * Stored as an enum value.
     */
    @Enumerated(EnumType.STRING)
    Role role;

    /**
     * The phone number of the employee.
     * Mapped to "phone_number" in the database.
     */
    @JsonProperty("phone_number")
    String phoneNumber;

    /**
     * Timestamp of when the employee record was created.
     * Automatically set by Hibernate when the record is first created.
     */
    @Temporal(TemporalType.TIMESTAMP)
    @CreationTimestamp // Automatically generated creation timestamp
    Date createdAt;

    /**
     * Timestamp of the last time the employee record was updated.
     * Automatically set by Hibernate on updates.
     */
    @Temporal(TemporalType.TIMESTAMP)
    @UpdateTimestamp // Automatically generated update timestamp
    Date updatedAt;
}
